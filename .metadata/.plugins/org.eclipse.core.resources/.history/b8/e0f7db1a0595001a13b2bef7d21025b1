package com.sgm.liteapp.admin.controller;

import javax.servlet.http.HttpServletRequest;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import com.sgm.liteapp.admin.common.JsonResult;
import com.sgm.liteapp.admin.exception.ResultException;
import com.sgm.liteapp.admin.service.UploadFileService;
import com.sgm.liteapp.commons.csapi.CSAPIService;

@Controller
@RequestMapping("/uploadFile")
public class UploadFileController {

	private static final Logger logger = LoggerFactory.getLogger(UploadFileController.class);

	@Autowired
	private UploadFileService uploadFileService;

	@Autowired
	private CSAPIService csapiService;

	@ResponseBody
	@RequestMapping(value = "/upload", consumes = "multipart/form-data", method = RequestMethod.POST)
	public JsonResult uploadFileReadJsonInfo(@RequestParam(value = "file", required = false) MultipartFile file)
			throws Exception {
		logger.info("ZIP文件直接上传");
		String fileName = file.getOriginalFilename();
		if (!fileName.endsWith("zip")) {
			throw new ResultException(500, "文件类型异常");
		}
		byte[] fileContent = file.getBytes();
		String fileId = csapiService.uploadFile(fileName, fileContent);
		return JsonResult.SUCCESS(uploadFileService.processHandleUploadInfo(fileId, fileContent));
	}

	@ResponseBody
	@RequestMapping(value = "/upload", method = RequestMethod.POST)
	public JsonResult uploadFileReadJsonInfo(HttpServletRequest request) throws Exception {
		logger.info("ZIP文件通过文件服务器中转");
		// 从SGM文件服务器上拿文件
		String fileId = request.getParameter("fileId");
		System.out.println(fileId);
		byte[] fileContent = csapiService.getFile(fileId).getContent();
		if (fileContent == null) {
			throw new Exception("文件未找到");
		}
		return JsonResult.SUCCESS(uploadFileService.processHandleUploadInfo(fileId, fileContent));
	}

	@ResponseBody
	@RequestMapping(value = "/token", method = { RequestMethod.POST, RequestMethod.GET })
	public JsonResult getAccessToken() throws Exception {
		return JsonResult.SUCCESS(csapiService.getAccessToken());
	}
}
